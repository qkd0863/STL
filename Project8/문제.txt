//문제 int 100개를 저장하는데 메모리 bit값을 그대로 저장하자
//int 100개 = sizeof(int) * 100 = 400 bytes


//문제 파일 "int100개를메모리그대로저장.txt"에
// int값 100개가 wrtie 함수를 사용하여 기록되어 있다
// 파일은 binary 모드로 열어 기록하였다
// 파일에 기록된 int값 100개를 메모리로 읽어온 후 
// 화면에 출력하라


// 문제 dogs를 binary mode/write 로 파일에 기록하라
// 기록된 파일을 읽어서 num값이 가장 큰 dog를 찾아 화면에 출력하라


// 문제 "Dog.txt" 파일은 binary 모드로 기록되었다
// 여기에는 몇 개인지 모르는 class Dog 객체를 write 함수를 사용하여 기록하였다
// class Dog의 멤버는 다음과 같다
// 파일을 읽어 num값이 가장 큰 Dog 객체를 화면에 출력하라
// 파일을 읽어 num값이 1000미만인 Dog 객체를 화면에 출력하라


// 문제 프로그램에서 이용할 수 있는 전역변수의 최대 크기는?


// 문제 사용자가 입력한 int num 만큼 메모리를 동적할당하라
// int를 num개 동적할당한다
// 이 메모리를 1부터 시작하는 정수로 채운다
// 이 메모리의 합계를 화면에 출력한다
// 이 모든 과정을 영원히 반복하라


//문제 "FileName.cpp"의 모든 소문자를 대문자로 바꿔 "stl대문자.txt"에 저장하라



//문제 [10000, 99999] 범위의 값을 갖는 int 100개를 만들어라
// qsort를 사용하여 오름차순으로 정렬하시오
// 정렬한 결과를 화면에 출력하세요


//문제 [1, 1000] 범위의 값을 갖는 int 100개를 만들어라
// std::sort를 사용하여 오름차순으로 정렬하시오
// 정렬한 결과를 화면에 출력하세요


array<String, 100>a;
//문제 a에 "FileName.cpp"에 있는 단어를 저장하라
//a를 길이 오름차순으로 정렬하라
//화면에 a를 출력하라


//문제 키보드에서 입력한 int값의 합계와 평균을 출력하라
//문제 키보드에서 입력한 String을 길이 오름차순 정렬하여 출력하라


// 문제 FileName.cpp 에 있는 알파벳 소문자의 출현 횟수를 다음과 같이 출력하라
// a - 20
// b - 3
// c - 1
// ...
// z - 2
//islower() - 알파벳 소문자 판별



vector<int> v{ 1,2,3,4,5 };
//문제 v에서 3을 제거하고 출력하라
// erase-remove idiom

//문제 v에서 홀수를 제거하라


vector<String> v{ "1","2","3","4","5","3","33"};
//문제 v에서 "3"을 삭제하라